使用组合模式的场景：
-把部分和整体的关系用树形结构来表示，从而使客户端可以使用同一的方式处理部分对象和整体对象。

组合模式核心
-抽象构件(Component)角色：定义了叶子和容器构件的共同点
-叶子 (Leaf)构件角色：无子节点
-容器(Composite)构件角色：由容器特征，可以包含子节点

组合模式工作流程分析：
-组合模式为处理树形结构提供了完美的解决方案，描述了如何将容器和叶子进行递归组合，使得用户在使用时可以一致性的对待容器和叶子。
-当容器对象的指定方法被调用时，将遍历整个树形结构，寻找也包含这个方法的成员，并调用执行，其中，使用了递归调用的机制对整个结构进行处理。

开发中的 应用场景：
-操作系统的资源管理器
-GUI中的容器层次图
-XML文件解析
-OA系统中，组织结构的处理
-Junit单元测试框架
 底层设计就是典型的组合模式，TestCase(叶子)TestUnit(容器) Test接口
