访问者模式：
  对于某个对象或者一组对象，不同的访问者，产生的结果不同，执行操作也不同。
  
应用场景：
1.不同的子类，依赖不同的其他对象。
2.需要对一组对象进行许多不相关的操作，又不想在类中实现这些方法。
3.定义的类很少改变，但是执行的操作却经常发生改变。
  