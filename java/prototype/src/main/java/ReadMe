1.短时间创建大量对象时，可以考虑使用原型模式
2.开发中的应用场景：
  1.原型模式很少单独出现，一般利用工厂方法模式一起出现，通过clone的方法创建一个对象，然后由工厂方法提供给调用者。
    spring中bean的创建实际就两种：单例模式和原型模式。
    
    创建型模式的总结：
    -单例模式
     保证一个类只有一个实例，并且提供一个访问该实例的全局访问点
    -工厂模式
     	简单工厂模式
                    用来生产统一等级结构中的任意产品（新增产品需要修改现有代码）
                    工厂方法模式
        用来生产同一等级结构中的产品
        抽象工厂模式
        用来生产不同产品族的产品（不能新增产品，支持新增产品族）
   
   -创建者模式
   分离了对象子组件的单独构造(由Builder来负者)和装配(由Director负者)，对象的构造比较复杂时使用。
 由于实现了构建和装配的解耦。不同的构建器，相同的装配也可以做出不同的对象；相同的构建器，不同的装配顺序也可以做出不同的 对象。也就是实现了构建算法、装配算法的解耦，实现了更好的复用。
 应用场景：
 StringBuilder类的append方法
 SQL中的PreparedStatement
 JDOM中，DomBuilder SAXBuilder 
   -原型模式
   通过new创建一个对象需要繁琐的数据准备货访问权限  ，当短时间需要创建大量对象，并且new笔记耗时，则可以考虑使用原型模式